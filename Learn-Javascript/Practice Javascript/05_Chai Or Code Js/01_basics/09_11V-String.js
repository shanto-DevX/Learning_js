// String

// const nameIs = "Shanto";
// const repoCount = 50;

// console.log(nameIs + repoCount + "value");

/*
 * backtick  ``
 *Template literals (Template strings)
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals
 */

// console.log(`Hello My Name Is : ${nameIs} and my Repo Count is ${repoCount}`);

// console.log(gameName);
// console.log(gameName[0]);
// console.log(gameName.__proto__);
// console.log(gameName.length);
// console.log(gameName.toLowerCase());
// console.log(gameName.toUpperCase());
// console.log(gameName.charAt(2)); * Find Which item have in 2 index
// console.log(gameName.indexOf("a")); * find index Value
// console.log(gameName.lastIndexOf("_"));
// console.log(gameName.lastIndexOf("_"));

// const gameName = new String("Shanto_Studio");
// const newStr = gameName.substring(0, 4); |> not use Negative
// console.log(newStr);

// const anotherStr = gameName.slice(0, -4);
// Shanto_Studio |> 0,4 -> Shan ||
// const anotherStr = gameName.slice(-8, -4);
// console.log(anotherStr);

/* const newStr = "   Shanto   ";
console.log(newStr);
//* trim() -> Remove White Space {first & Last}
console.log(newStr.trim());
console.log(newStr.trimStart());
console.log(newStr.trimEnd()); */

// const url = "https://shanto.studio/a%20hello";

// console.log(url);
// console.log(url.replace("%20", "-"));

// console.log(url.includes("shanto"));

// console.log(url.split("."));

// ===========================================
/* 
    -> String Methods
    * ‚úÖ var.length              => Show String Lenght

    * ‚úÖ var.toUpperCase         => Show String in UpperCase
    
    * ‚úÖ var.toLowerCase         => Show String in LowerCase
    
    * ‚úÖ var.indexOf("Value")    => find String Value index
    
    * ‚úÖ var.lastIndexOf("Value")    => find Last String Value index |> ‡¶∏‡¶¨‡¶æ‡¶∞ ‡¶∂‡ßá‡¶∑‡ßá ‡¶Ø‡ßá‡¶á ‡¶≠‡ßá‡¶≤‡ßÅ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶∏‡ßá‡¶á‡¶ü‡¶æ‡¶∞ ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§ 
    
    * ‚úÖ var.charAt(Value)       => find String index using Value

    * ‚úÖ var.charCodeAt(Value)       => ‡¶è‡¶á‡¶ñ‡¶æ‡¶®‡ßá ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ ‡¶¶‡¶ø‡¶≤‡ßá ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶è‡¶∞ ‡¶°‡ßá‡¶∏‡¶ø‡¶Æ‡¶æ‡¶≤ ‡¶≠‡ßá‡¶≤‡ßÅ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá 

    * ‚úÖ var = new StringfromCharCode(Value)       => ‡¶è‡¶á‡¶ñ‡¶æ‡¶®‡ßá ‡¶°‡ßá‡¶∏‡¶ø‡¶Æ‡¶æ‡¶≤ ‡¶≠‡ßá‡¶≤‡ßÅ ‡¶¶‡¶ø‡¶≤‡ßá ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá [https://asecuritysite.com/coding/asc2]
    
    * ‚úÖ var.includes("Value")   => If String Have in variable Its show True / or False
    
    * ‚úÖ var.split(".")          => String ‡¶ï‡ßá array ‡¶§‡ßá ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞ ‡¶ï‡¶∞‡ßá, ("") / (. or _ / Anything)
    
    * ‚úÖ var.replace("%20", "-") => String ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ï‡ßã‡¶® ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡ßá‡¶∏ ‡¶ï‡¶∞‡¶§‡ßá ‡¶è‡¶á ‡¶Æ‡ßá‡¶•‡¶° ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶π‡ßü
    
    * ‚úÖ var.trim()              => Remove String White Space
    
    * ‚úÖ var.trimStart()         => Remove String White Space in Start
    
    * ‚úÖ var.trimEnd()           => Remove String White Space in End
    
    * ‚úÖ var.startsWith("Value") => ‡¶Ø‡¶¶‡¶ø ‡¶≠‡¶æ‡¶≤‡ßÅ‡¶ü‡¶æ String ‡¶è‡¶∞ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶è ‡¶•‡¶æ‡¶ï‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá, Return ‡¶¶‡¶ø‡¶¨‡ßá ‡¶¨‡ßÅ‡¶≤‡¶ø‡ßü‡¶æ‡¶® ‡¶≠‡ßá‡¶≤‡ßÅ ‡•§
    
    * ‚úÖ var.endsWith("Value")   => ‡¶Ø‡¶¶‡¶ø ‡¶≠‡¶æ‡¶≤‡ßÅ‡¶ü‡¶æ String ‡¶è‡¶∞ ‡¶∂‡ßá‡¶∑‡ßá ‡¶è ‡¶•‡¶æ‡¶ï‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá, Return ‡¶¶‡¶ø‡¶¨‡ßá ‡¶¨‡ßÅ‡¶≤‡¶ø‡ßü‡¶æ‡¶® ‡¶≠‡ßá‡¶≤‡ßÅ ‡•§

    * ‚úÖ var.substring(0,10)   => ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∞‡ßá‡¶û‡ßç‡¶ú ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ String ‡¶≠‡ßá‡¶≤‡ßÅ ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü, ‡¶®‡ßá‡¶ó‡ßá‡¶ü‡¶ø‡¶≠ ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü ‡¶®‡ßá‡ßü‡¶®‡¶æ‡•§

    * ‚ùå var.slice(0,10)   => ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∞‡ßá‡¶û‡ßç‡¶ú ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ String ‡¶≠‡ßá‡¶≤‡ßÅ ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü, ‡¶®‡ßá‡¶ó‡ßá‡¶ü‡¶ø‡¶≠ ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü ‡¶®‡ßá‡ßü 

    * ‚úÖ var.concat("value")   => ‡¶è‡¶ï‡¶ü‡¶æ String ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶æ String ‡¶è‡¶° ‡¶ï‡¶∞‡ßá‡•§
    
    *  üëâ search()
    *  üëâ localeCompare() 
    *  üëâ match() 
    *  üëâ matchAll() 
    *  ‚úÖ replace() 
    *  ‚úÖ replaceAll() 
    
    *  ‚úÖ padStart()  => ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶∏‡¶æ‡¶Æ‡¶®‡ßá  ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶≤‡ßá padStart ‡¶¶‡¶ø‡ßü‡ßá ‡¶è‡¶° ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü,‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶≤‡ßá‡¶®‡ßç‡¶• ‡¶Ø‡¶§ ‡¶§‡¶æ‡¶∞ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡ßá‡¶∂‡¶ø (‡¶Ø‡¶§ ‡¶ü‡ßÅ‡¶ï‡ßÅ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶§‡ßá ‡¶ö‡¶æ‡¶á) ‡¶§‡¶§ ‡¶®‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá, ‡¶Ø‡ßá‡¶Æ‡¶®‡¶É String Length 20 ‡¶®‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá ‡ß®‡ß¶ ‡¶è‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø‡•§
    *  ‚úÖ padEnd()  => ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶™‡¶ø‡¶õ‡¶®‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶≤‡ßá padEnd ‡¶¶‡¶ø‡ßü‡ßá ‡¶è‡¶° ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü,‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶≤‡ßá‡¶®‡ßç‡¶• ‡¶Ø‡¶§ ‡¶§‡¶æ‡¶∞ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡ßá‡¶∂‡¶ø (‡¶Ø‡¶§ ‡¶ü‡ßÅ‡¶ï‡ßÅ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶§‡ßá ‡¶ö‡¶æ‡¶á) ‡¶§‡¶§ ‡¶®‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá, ‡¶Ø‡ßá‡¶Æ‡¶®‡¶É String Length 20 ‡¶®‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá ‡ß®‡ß¶ ‡¶è‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø‡•§
    

    * 

*/

// var str = new String("Programming language");
var str = "Programming language";
// console.log(str.lastIndexOf("m"));
// console.log(str.startsWith("P"));
// console.log(str.endsWith("g"));

// console.log(str.charAt(3));
// console.log(str.charCodeAt(3));

// let hellos = String.fromCharCode(83, 72, 65, 78, 84, 79);
// console.log(hellos.toLowerCase());
// console.log(str.substring(0, 11));

// console.log(str.slice(0, 11));
// console.log(str.slice(-8, -1));

// let x = str.concat(" Javascript");
// console.log(x);

// console.log(str.replace("P", "K"));
// console.log(str.replaceAll("P", "K"));

console.log(str.length);
console.log(str.padStart(25, "*"));
console.log(str.padEnd(25, "*"));
