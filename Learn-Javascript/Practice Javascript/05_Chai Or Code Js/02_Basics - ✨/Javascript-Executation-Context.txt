Javascript Execution  content
------------------------------
* Execution  |> Js ржлрж╛ржЗрж▓ рж░рж╛ржи ржХрж┐ржнрж╛ржмрзЗ ржХрж░ржмрзЗред
* рж░рж╛ржи ржХрж░рж╛рж░ ржЬржирзНржп ржжрзБржЗ ржкрзЗржЗржЬ ржП рж░рж╛ржи ржХрж░ржмрзЗ 

* {ржХрзЛржб} => Global Execution context рждрзЗрж░рж┐ рж╣рзЯред ржПржмржВ This ржПрж░ ржоржзрзНржпрзЗ рж░рзЗржЦрзЗ ржжрзЗржУрзЯрж╛ рж╣ржмрзЗред 

-> (i) ржмрзНрж░рж╛ржЗржЬрж╛рж░ ржПрж░ Execution  context This, Window object ржирж┐рзЯрзЗ ржХрж╛ржЬ ржХрж░рзЗ 

* Js singel thread
--------------------------
тЮбя╕П Execution context
* Global Execution context 
    ЁЯСЙ :- This -> ржПржЗ Execution рж╣ржмрзЗржЗ, рж╕ржм ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржПред 
* function/functional Execution  context
* eval Execution  context


тЮбя╕П 2 Phase
----------
| {code} | ЁЯСЗ Code exicute
---------- 
1) Memory ceration Phase
    -> ржпрж╛ ржпрж╛ ржбрж┐ржХрзНрж▓рж┐рзЯрж╛рж░ ржХрж░рж╛ рж╣рзЯ рж╕рзЗржЗржЧрзБрж▓рзЛ ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯ ржХрж░рзЗ ржирж╛, рж╢ржзрзБ ржорзЗржорж░рж┐рждрзЗ ржЬрж╛рзЯржЧрж╛ ржПрж▓рзЛржХрзЗржЯ/ржЬржорж╛ ржХрж░рзЗ рж░рж╛ржЦрзЗ
2) execuation phase
    -> ржПржЦрж╛ржирзЗ ржПрж╕рзЗ ржХрзЛржб ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯ ржХрж░рзЗ

--------------------------------------------------

let val1 = 10
let val2 = 5

function addNum(num1,num2){
    let total = num1+num2
    return total;
}

let result1 = addNum(val1,val2)
let result2 = addNum(10,2)


ЁЯСЙ ржПржЗ ржХрзЛржбрзЗрж░ ржоржзрзНржпрзЗ ржкрзНрж░ржерзЗржорзЗ 
    рзз. |> Global Exicuation / Global Enviroment -> this ржПрж░ ржоржзрзНржпрзЗ рж▓рзЛржХрзЗржЯ ржХрж░рж╛ ржерж╛ржХрзЗред 
    рзи. |> Memory ceration phase
            * рж╕ржм ржнрзЗрж░рж┐ржПржмрж▓ ржЧрзБрж▓рзЛ ржПржХрждрзНрж░рзЗ рж░рж╛ржЦрзЗ ржПржмржВ ржПржЦрж╛ржирзЗ ржкрзНрж░ржержорзЗ ржнрзЗрж▓рзБ ржЧрзБрж▓рзЛ Undefined ржерж╛ржХрзЗред
            * -> val1       => Undefined
            * -> val2       => Undefined
            * -> addNum     => Undefined
            * -> result1    => Undefined
            * -> result2    => Undefined
    рзй. |> Execution phase
            * ржПржЦрж╛ржирзЗ ржнрзЗрж▓рзБ ржЧрзБрж▓рзЛ ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯ рж╣рзЯред
                * -> val1       => 10
                * -> val2       => 5
                * -> addNum(func) -> Line 33
                    => ржПржЦрж╛ржирзЗ ржПрж╕рзЗ ржирждрзБржи ржмрж▓рзНржХ [New Execution  context] рждрзЗрж░рж┐ рж╣рзЯред ржпржд ржмрж╛рж░ ржлрж╛ржВрж╢ржи ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯ рж╣ржмрзЗ рждржд ржмрж╛рж░ ржПржЗ ржмрзНрж▓ржХ рждрзЗрж░рж┐ рж╣ржмрзЗред

                        -> new variabile envariment 
                        ->          +
                        -> Execution  Thread


                    ЁЯСЗЁЯСЗЁЯСЗ рж▓рж╛ржЗржи рзйрзо ржпржЦржи рзйрзй ржПрж░ ржлрж╛ржВрж╢ржи ржП ржпрж╛ржмрзЗ ЁЯСЗЁЯСЗЁЯСЗ
                    => addNum() ржПрж░ ржХрж╛ржЫрзЗ ржЧрзЗрж▓рзЗ ржЖржмрж╛рж░ ржирждрзБржи ржХрж░рзЗ 
                        * Memory phase & execuation phase рждрзЗрж░рж┐ рж╣ржмрзЗред 
                        ЁЯСЙ Memory phase ржП ржнрзЗрж▓рзБ ржерж╛ржХржмрзЗ Undefined
                            -> val1  -> Undefined
                            -> val2  -> Undefined
                            -> total -> Undefined

                        ЁЯСЙ Execuation context ржПрж░ ржоржзрзНржпрзЗ ржнрзЗрж▓рзБ ржПржб рж╣ржмрзЗред [10,5]
                            -> num1 => 10
                            -> num2 => 5
                            -> toal => 15
                            -> return => ржХрзЛржи ржнрзЗрж▓рзБ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рж▓рзЗ, рж╕рзЗржЗржЯрж╛ Global Exicuation context ржбрж╛ржЯрж╛ ржЬржорж╛ рж╣рзЯред 

                * -> result1 => 15 |> ржПржЦрж╛ржирзЗ ржнрзЗрж▓рзБ ржПрж╕рзЗ ржЬржорж╛ рж╣ржмрзЗ addNum(func) ржПрж░ ржХрж╛ржЬ рж╢рзЗрж╖рзЗред 

                * ржПржЗржЯрж╛ ржкрзНрж░рждрж┐ржмрж╛рж░ ржпржЦржи function ржПрж░ ржХрж╛ржЫрзЗ ржпрж╛рзЯ, рждржЦржи ржПржЗ ржмрж▓рзНржХ рждрзЗрж░рж┐ рж╣рзЯред Global ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯ рж╢рзЗрж╖рзЗ ржПржЗ ржмрж▓рзНржХ ржбрж┐рж▓рзЗржЯ рж╣рзЯрзЗ ржпрж╛рзЯ

                --------------------------------------------------------
                result2 ржПрж░ ржоржзрзНржпрзЗ ржлрж╛ржВрж╢ржи ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯ рж╣ржЪрзНржЫрзЗред 

                -> addNum [New Execution  context]
                    -----------------------------
                    | new variabile envariment  |
                    |          +                |
                    | Execution  Thread         |
                    -----------------------------
                                ЁЯСЗ
                    * Memory phase
                        -< num1 -> Undefined 
                        -< num2 -> Undefined 

                    * execuation phase
                        -< num1     -> 10 
                        -< num2     -> 2
                        -< total    -> 12
                    
                    return total in Global Execuation. & store Data at result2

========================================================================

ЁЯСЙ CallStack


        ----------------------------------
    тЭМ  |     After complete(function)   |
        ----------------------------------
        ----------------------------------
       1|     addNum(function)           |
        ----------------------------------
        ----------------------------------
       0|     Global execuation          |
        ----------------------------------

|> ржПржЗржЯрж╛ lifo -> last in first out ржПрж░ ржоржзрзНржпрзЗ ржХрж╛ржЬ ржХрж░рзЗ

|> ржПржЗржЦрж╛ржирзЗ ржПржХржЯрж╛ ржлрж╛ржВрж╢ржи ржпрзЗржнрж╛ржмрзЗ ржорзЗржорж░рж┐рждрзЗ ржерж╛ржХрзЗред 
    рзз) ржкрзНрж░ржержорзЗ Global execuation ржПржХрзНрж╕рж┐ржХрж┐ржЙрж╢ржи рж╣рзЯ
    рзи) ржПрж░ ржкрж░рзЗ ржлрж╛ржВрж╢ржи ржПрж░ ржоржзрзНржпрзЗ 
            => Memory phase
            => execuation phase
    рзй) ржПржЗржмрж╛рж░ ржПржЗржЯрж╛ ржорзЗржорж░рж┐ ржерзЗржХрзЗ ржмрзЗрж░ рж╣рзЯрзЗ ржпрж╛рзЯред

|>ржПржЗржЦрж╛ржирзЗ ржПржХрзЗрж░ ржЕржжрж┐ржХ ржлрж╛ржВрж╢ржи ржпрзЗржнрж╛ржмрзЗ ржорзЗржорж░рж┐рждрзЗ ржерж╛ржХрзЗред 


        -------------------------------------
    ЁЯФЭ  |     three()                       |
        -------------------------------------
        -------------------------------------
    ЁЯФЭ  |     two()                         |
        -------------------------------------
        -------------------------------------
    ЁЯФЭ  |     one()                         |
        -------------------------------------
        -------------------------------------
    ЁЯФЭ  |     Global execuation             |
        -------------------------------------